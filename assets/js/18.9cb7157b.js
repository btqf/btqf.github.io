(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{435:function(a,e,n){"use strict";n.r(e);var s=n(62),v=Object(s.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p",[a._v("在我们的印象中，当提到"),n("code",[a._v("JavaScript")]),a._v("中的变量提升，我们想到的是“变量和函数的声明在物理层面移动到代码的最前面“。当然这么说不大准确，变量和函数声明在代码里的位置是不会变的，而是在编译阶段被放入内存中。")]),a._v(" "),n("p",[a._v("可是如果我问你："),n("code",[a._v("let 到底有没有提升？如果有，var / let / function三者的变量提升一致吗？")]),a._v("此时你的答案是什么？")]),a._v(" "),n("p",[a._v("接下来让我们来探讨这两个问题，如有错误敬请指正。")]),a._v(" "),n("h2",{attrs:{id:"_1-let存在提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-let存在提升"}},[a._v("#")]),a._v(" 1. let存在提升")]),a._v(" "),n("p",[a._v("对于"),n("code",[a._v("let")]),a._v("是否存在提升这个问题，让我们先来看以下这段代码：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("a = \"global\";\n\n(function() {\n    console.log(a); // undefined, 而不是打印出global\n    var a;\n}());\n\n{\n    console.log(a); // Uncaught ReferenceError: Cannot access 'a' before initialization\n    let a = 1;\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[a._v("对于在函数作用域下打印出"),n("code",[a._v("undefined")]),a._v("，我们应该不奇怪。但引起我注意的是在块作用域下，抛出引用错误的原因是在初始化之前找不到"),n("code",[a._v("a")]),a._v("。那有没有可能"),n("code",[a._v("a")]),a._v("在"),n("strong",[a._v("创建过程被提升")]),a._v("？而在我发现ES文档中存在"),n("code",[a._v("[var/let hoisting]")]),a._v("，这让我有理由猜测"),n("code",[a._v("let")]),a._v("存在提升，只是由于"),n("strong",[a._v("暂时性死区")]),a._v("的原因，我们不能在"),n("code",[a._v("let a")]),a._v("之前使用 "),n("code",[a._v("a")]),a._v("。")]),a._v(" "),n("p",[a._v("为了证明我的猜想，我想先从"),n("code",[a._v("let")]),a._v("声明的创建、初始化和赋值过程入手。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("{\n  let a = 0;\n  a = 1;\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("上述的代码块中发生的过程如下：")]),a._v(" "),n("ol",[n("li",[a._v("找到所有用"),n("code",[a._v("let")]),a._v("声明的变量，在环境创建变量；")]),a._v(" "),n("li",[n("strong",[a._v("执行代码；")])]),a._v(" "),n("li",[a._v("执行"),n("code",[a._v("a=0")]),a._v("，将"),n("code",[a._v("a")]),a._v("初始化为1；")]),a._v(" "),n("li",[a._v("执行"),n("code",[a._v("a=1")]),a._v("，对"),n("code",[a._v("a")]),a._v("进行赋值。")])]),a._v(" "),n("p",[a._v("由该过程可知，如果我们在"),n("strong",[a._v("创建完变量后和初始化之前")]),a._v("执行"),n("code",[a._v("log()")]),a._v("方法，控制台将会报错：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("let a = 'global'\n{\n  console.log(a) // Uncaught ReferenceError: Cannot access 'a' before initialization\n  let a = 1\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("由此一来我们就可以知道了"),n("code",[a._v("let")]),a._v("在创建的过程被提升，而在初始化过程没有被提升。")]),a._v(" "),n("h2",{attrs:{id:"_2-var-function的变量提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-var-function的变量提升"}},[a._v("#")]),a._v(" 2. var/function的变量提升")]),a._v(" "),n("p",[a._v("接下来我们来看看"),n("code",[a._v("function/var")]),a._v("的创建、初始化和赋值过程，由此看看能否探究出它们的差别。")]),a._v(" "),n("h3",{attrs:{id:"_2-1-var的变量提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-var的变量提升"}},[a._v("#")]),a._v(" 2.1 var的变量提升")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function foo() {\n  console.log(a);  // undefined\n  var a = 0;\n  var b = 1;\n}\nfoo();\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("p",[a._v("当我们执行"),n("code",[a._v("foo()")]),a._v("时，发生以下过程（较为省略）：")]),a._v(" "),n("ol",[n("li",[a._v("为"),n("code",[a._v("foo")]),a._v("创建环境；")]),a._v(" "),n("li",[a._v("找到"),n("code",[a._v("foo")]),a._v("中所有被"),n("code",[a._v("var")]),a._v("声明的变量，在这个环境中创建变量；")]),a._v(" "),n("li",[a._v("将变量初始化为 undefined;")]),a._v(" "),n("li",[a._v("执行代码；")]),a._v(" "),n("li",[a._v("将"),n("code",[a._v("a")]),a._v("赋值为0，"),n("code",[a._v("b")]),a._v("赋值为1。")])]),a._v(" "),n("p",[a._v("由此我们可以知道"),n("code",[a._v("var")]),a._v("声明在代码执行前创建变量并初始化，所以当我们在"),n("code",[a._v("var a = 0")]),a._v("之前执行"),n("code",[a._v("log(a)")]),a._v("方法会得到 undefined 的结果。")]),a._v(" "),n("h3",{attrs:{id:"_2-2-function的变量提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-function的变量提升"}},[a._v("#")]),a._v(" 2.2 function的变量提升")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("foo('btqf');\n\nfunction foo(name) {\n  console.log(\"my name is\" + name)  // my name is btqf\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("当我们执行"),n("code",[a._v("foo")]),a._v("函数时，发生以下过程：")]),a._v(" "),n("ol",[n("li",[a._v("找到所有"),n("code",[a._v("function")]),a._v("声明的变量，在环境中创建变量；")]),a._v(" "),n("li",[a._v("将这些变量初始化并赋值;")]),a._v(" "),n("li",[a._v("执行代码。")])]),a._v(" "),n("p",[a._v("由此可见，"),n("code",[a._v("function")]),a._v("声明在代码执行前就创建、初始化并赋值。")]),a._v(" "),n("h2",{attrs:{id:"_3-总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-总结"}},[a._v("#")]),a._v(" 3. 总结")]),a._v(" "),n("ol",[n("li",[n("code",[a._v("let")]),a._v("的「创建」过程被提升了，但是初始化没有提升。")]),a._v(" "),n("li",[n("code",[a._v("var")]),a._v("的「创建」和「初始化」都被提升了。")]),a._v(" "),n("li",[n("code",[a._v("function")]),a._v(" 的「创建」「初始化」和「赋值」都被提升了。")]),a._v(" "),n("li",[a._v("函数和变量相比，会被优先提升，即函数会被提升到更靠前的位置。")])]),a._v(" "),n("p",[a._v("值得一提的是"),n("code",[a._v("const")]),a._v("与"),n("code",[a._v("let")]),a._v("基本类似，唯一的区别在于"),n("code",[a._v("const")]),a._v("只有创建和初始化，没有赋值过程。")]),a._v(" "),n("p",[a._v("好啦，本文就讲述到这里，谢谢大家的观看！❤❤")])])}),[],!1,null,null,null);e.default=v.exports}}]);