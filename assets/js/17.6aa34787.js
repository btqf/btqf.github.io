(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{439:function(t,s,a){"use strict";a.r(s);var e=a(62),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1-什么是原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是原型链"}},[t._v("#")]),t._v(" 1.什么是原型链？")]),t._v(" "),a("p",[t._v("每个对象拥有一个"),a("strong",[t._v("原型对象")]),t._v("，对象以其原型为模板、从原型继承方法和属性。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为"),a("strong",[t._v("原型链 (prototype chain)")]),t._v("，它解释了为何一个对象会拥有定义在其他对象中的属性和方法。")]),t._v(" "),a("h3",{attrs:{id:"_2-原型的作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-原型的作用是什么"}},[t._v("#")]),t._v(" 2.原型的作用是什么？")]),t._v(" "),a("ol",[a("li",[t._v("让实例对象知道谁创建了它")]),t._v(" "),a("li",[t._v("如果想要给某些类库添加一些方法，可以使用"),a("code",[t._v("xxx.prototype.method")]),t._v("来进行扩展")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function 就是个语法糖")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部等同于 new Function()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个字面量内部也是使用了 new Object()")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("Object 是所有对象的爸爸，所有对象都可以通过 "),a("strong",[t._v("proto")]),t._v(" 找到它")]),t._v(" "),a("li",[a("code",[t._v("Function")]),t._v(" 是所有函数的爸爸，所有函数都可以通过"),a("code",[t._v("__proto__")]),t._v("找到它")]),t._v(" "),a("li",[a("code",[t._v("Function.prototype")]),t._v(" 和 "),a("code",[t._v("Object.prototype")]),t._v(" 是两个特殊的对象，他们由引擎来创建\n"),a("ul",[a("li",[t._v("这也解释了"),a("code",[t._v("Function.prototype = Function.__proto__")])])])]),t._v(" "),a("li",[t._v("除了以上两个特殊对象，其他对象都是通过构造器 new 出来的")]),t._v(" "),a("li",[t._v("函数的 "),a("code",[t._v("prototype")]),t._v("是一个对象，也就是原型")]),t._v(" "),a("li",[t._v("对象的 "),a("code",[t._v("__proto__")]),t._v(" 指向原型， "),a("code",[t._v("__proto__")]),t._v(" 将对象和原型连接起来组成了原型链")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/webp/28976061/1658741927904-c0ef7baf-1726-462c-850d-0cf176ba22fb.webp#clientId=u02762f61-8cb8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=625&id=ue845a324&margin=%5Bobject%20Object%5D&originHeight=590&originWidth=488&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u41f567d2-dcb4-463a-8fab-24c24c68be1&title=&width=517",alt:""}})])])}),[],!1,null,null,null);s.default=n.exports}}]);