(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{437:function(n,s,a){"use strict";a.r(s);var e=a(62),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[n._v("#")]),n._v(" 定义")]),n._v(" "),a("p",[n._v("柯里化是一种关于函数的高阶技术。")]),n._v(" "),a("p",[n._v("它指的是一种函数的转换，即将一个函数从可调用的"),a("code",[n._v("f(a, b, c)")]),n._v("转换为可调用的"),a("code",[n._v("f(a)(b)(c)")]),n._v("。我们必须要明确的是，柯里化不会调用函数，它只是对函数进行转换。")]),n._v(" "),a("p",[n._v("举个例子：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function curry(f) {             // curry(f) 执行柯里化转换\n  return function(a) {\n    return function(b) {\n      return f(a, b);\n    };\n  };\n}\n\nfunction add(a, b) {\n  return a + b;\n}\n\nlet curriedSum = curry(add);\nconsole.log(curriedSum(1)(2));   // 3\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br")])]),a("p",[n._v("正如上述代码所示，实现是通过两个包装器：")]),n._v(" "),a("ol",[a("li",[a("code",[n._v("curry(func)")]),n._v("的结果为一个包装器"),a("code",[n._v("function(a)")]),n._v(";")]),n._v(" "),a("li",[n._v("当其被"),a("code",[n._v("curriedSum(1)")]),n._v("调用时，它的参数被保存到词法环境中，然后返回一个新的包装器"),a("code",[n._v("function(b)")]),n._v(";")]),n._v(" "),a("li",[n._v("然后该包装器以参数"),a("code",[n._v("2")]),n._v("被调用，并且将调用传递给"),a("code",[n._v("add")]),n._v("函数。")])]),n._v(" "),a("p",[n._v("因此，柯里化可以这样子来理解："),a("strong",[n._v("用闭包将参数保存起来，当参数的数量足够去执行函数后，我们就执行函数。")])]),n._v(" "),a("hr"),n._v(" "),a("h2",{attrs:{id:"用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[n._v("#")]),n._v(" 用途")]),n._v(" "),a("p",[n._v("可是也有人问了，柯里化到底能干什么？")]),n._v(" "),a("p",[n._v("此处假设一家便利店给优惠顾客10%的折扣。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function discount(price, discount) {\n  return price * (1 - discount);\n}\n\n// 如果购买了价值100元的物品，折扣后价格为：90\nconst price = discount(100, 0.10);\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("p",[n._v("如果对每一个优惠顾客都要计算10%的折扣，这会不会很麻烦？此时我们就可以用到柯里化，这样我们就可以不用每次都增加这10%的折扣。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function discount(discount) {\n    return (price) => {\n        return price * (1 - discount);\n    }\n}\nconst tenPercentDiscount = discount(0.1);\n\n// 此后可以直接调用 tenPercentDiscount 函数，传入价格\ntenPercentDiscount(200); // 180\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("p",[n._v("而当我们想要修改折扣时，可以去修改"),a("code",[n._v("discount")]),n._v("函数，传入新的折扣值即可实现复用。")]),n._v(" "),a("p",[n._v("由此可见，柯里化的用途可以理解为："),a("strong",[n._v("参数复用")]),n._v("。本质上就是降低通用性，提高适用性。")]),n._v(" "),a("h2",{attrs:{id:"柯里化实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#柯里化实现"}},[n._v("#")]),n._v(" 柯里化实现")]),n._v(" "),a("p",[n._v("话不多说，先上代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function curry(func) {\n  return function curried(...args) {\n    if (args.length >= func.length) {\n      return func.apply(this, args);\n    } else {\n      return function(...args2) {\n        return curried.apply(this, args.concat(args2));\n      }\n    }\n  }\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("p",[n._v("当我们要运行该函数时，会有以下两个分支：")]),n._v(" "),a("ol",[a("li",[n._v("如果传入的"),a("code",[n._v("args")]),n._v("长度与原始函数所定义的参数长度即"),a("code",[n._v("func.length")]),n._v("相等或更长，则直接利用"),a("code",[n._v("apply()")]),n._v("g改变"),a("code",[n._v("this")]),n._v("指向，传入参数后调用原始函数；")]),n._v(" "),a("li",[n._v("否则我们将获得一个偏函数，返回一个包装器，它将之前传入的参数和新参数一起传入后应用"),a("code",[n._v("curried")]),n._v(".")])]),n._v(" "),a("p",[n._v("此处再补充一个优雅写法：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("const curry = fn =>\n   judge = (...args) => \n      args.length === fn.length\n         ? fn(...args)\n         : (...arg) => judge(...args, ...arg)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("如有错误，敬请指正！")])])}),[],!1,null,null,null);s.default=t.exports}}]);